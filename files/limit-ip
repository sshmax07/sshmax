#!/bin/bash

function send_log(){
CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
TIME="10"
URL="https://api.telegram.org/bot$KEY/sendMessage"
TEXT="
<code>────────────────────</code>
<b>⚠️ NOTIFICATIONS MULTI LOGIN ⚠️</b>
<code>────────────────────</code>
<code>Username  : </code><code>$user</code>
<code>Limit Ip  : </code><code>$iplimit</code>
<code>Used Ip   : </code><code>$cekcek</code>
<code>────────────────────</code>
"
curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

function monitor_vmip(){
#MONITOR VMESS IP
echo -n > /var/log/xray/access.log
sleep 1
data=( `ls /etc/kyt/limit/vmess/ip`);
for user in "${data[@]}"
do
    iplimit=$(cat /etc/kyt/limit/vmess/ip/$user)
    ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
    cekcek=$(echo -e "$ehh" | wc -l)
    
    if [[ $cekcek -gt $iplimit ]]; then
        send_log
    else
        echo "User $user is within the IP limit ($cekcek/$iplimit)"
    fi
    sleep 0.1
done
}

function monitor_vlip(){
#MONITOR VLESS IP
echo -n > /var/log/xray/access.log
sleep 1
data=( `ls /etc/kyt/limit/vless/ip`);
for user in "${data[@]}"
do
    iplimit=$(cat /etc/kyt/limit/vless/ip/$user)
    ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
    cekcek=$(echo -e "$ehh" | wc -l)
    
    if [[ $cekcek -gt $iplimit ]]; then
        send_log
    else
        echo "User $user is within the IP limit ($cekcek/$iplimit)"
    fi
    sleep 0.1
done
}

function monitor_trip(){
#MONITOR TROJAN IP
echo -n > /var/log/xray/access.log
sleep 1
data=( `ls /etc/kyt/limit/trojan/ip`);
for user in "${data[@]}"
do
    iplimit=$(cat /etc/kyt/limit/trojan/ip/$user)
    ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
    cekcek=$(echo -e "$ehh" | wc -l)
    
    if [[ $cekcek -gt $iplimit ]]; then
        send_log
    else
        echo "User $user is within the IP limit ($cekcek/$iplimit)"
    fi
    sleep 0.1
done
}

if [[ ${1} == "vmip" ]]; then
    monitor_vmip
elif [[ ${1} == "vlip" ]]; then
    monitor_vlip
elif [[ ${1} == "trip" ]]; then
    monitor_trip
fi
